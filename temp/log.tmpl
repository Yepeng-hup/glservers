<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>GLserver</title>
    <link href="/static/css/csstools/bootstrap.min.css" rel="stylesheet">
</head>
<style>
    input[type="text"] {
        padding: 8px;
        margin-left: 2px;
        border: none;
        border-bottom: 1px solid #000000;
        font-size: 12px;
        width: 250px;
    }

    .scroll-btn {
        position: fixed;
        right: 20px;
        bottom: 20px;
        padding: 15px;
        cursor: pointer;
        border: none;
        border-radius: 50%;
        background: #007bff;
        color: white;
        font-size: 1.2rem;
        box-shadow: 0 2px 5px rgba(0,0,0,0.3);
        transition: transform 0.3s;
    }

    .scroll-btn:hover {
        transform: scale(1.1);
    }
</style>
<body>
<h4 style="text-align: center;color: #007bff">GLSERVER</h4>

<div>
    <button id="scrollBtn" class="scroll-btn">↑</button>
</div>

<div>
    <li style="margin-left: 3px; font-size: 18px">
            <span style="color: crimson">
                <b style="color: black">日志总条数: [<b style="color: red">{{.logNum}}</b>]</b>
            </span><br><br>
    </li>
</div>

<div>
    <form style="display: inline-block" method="post" action="/ss">
        <input type="text" id="searchInput" name="queryStr" style="border: 1px solid black" placeholder="日志伪名关键字">
        <select name="selectxz" id="selectxz" class="btn" style="border: 1px solid black">
            <option value="vague">模糊查询</option>
            <option value="precise">精准查询</option>
        </select>
        <button type="submit" class="btn btn-success"><b>搜索</b></button>
    </form>

    <a href="/getlog" style="text-decoration: none;">
        <button class="btn btn-primary" style="margin-left: 2px;" id="clog"><b>查看日志</b></button>
    </a>

    <a href="/log/err" style="text-decoration: none;">
        <button class="btn btn-primary" style="margin-left: 2px;"><b>检测日志</b></button>
    </a>

    <form method="post" action="/del">
        <button class="btn btn-danger" style="position: absolute;top: 90px;right: 10px;">
            <b>全部删除</b>
        </button>
    </form>
</div>

<table class="table table-dark" style="margin-top: 20px;">

    <thead class="thead-dark sticky-top">
    <tr>
        <th>推送时间</th>
	<th>EIP</th>
        <th>日志伪名</th>
        <th>日志内容</th>
    </tr>
    </thead>

    <tbody id="data"></tbody>
</table>
<div id="pagination"></div><br>

<script>
    var logData = {{.gameLog}};
    const pageSize = 100;
    let currentPage = 1;

    function getCurrentPageData() {
        const start = (currentPage - 1) * pageSize;
        const end = start + pageSize;
        return logData.slice(start, end);
    }

    function renderTable() {
        const showLists = getCurrentPageData();
        let html = '';
        for (const item of showLists) {
            html += '<tr>';
            html += '<td>' + item.Time + '</td>';
	    html += '<td>' + item.Eip + '</td>';
            html += '<td>' + item.Pro + '</td>';
            html += '<td>' + '<pre style="color: darkgoldenrod">' + item.Log + '</pre>' + '</td>';
            html += '</tr>';
        }
        document.getElementById('data').innerHTML = html;
    }

    function getTotalPage() {
        return Math.ceil(logData.length / pageSize);
    }

    function renderPagination() {
        const totalPage = getTotalPage();
        let html = '';
        html += '第' + '<span style="color: #f36109">' + currentPage + '</span>' + '页 / 共' + totalPage + '页';
        html += '<button id="prevPage" class="btn btn-success" style="margin-left: 5px;">上一页</button>';
        html += '<button id="nextPage" class="btn btn-success" style="margin-left: 5px;">下一页</button>';
        document.getElementById('pagination').innerHTML = html;
        const prevPageBtn = document.getElementById('prevPage');
        if (currentPage === 1) {
            prevPageBtn.disabled = true;
        } else {
            prevPageBtn.disabled = false;
            prevPageBtn.addEventListener('click', function () {
                currentPage--;
                renderPagination();
                renderTable();
            });
        }
        const nextPageBtn = document.getElementById('nextPage');
        if (currentPage === totalPage) {
            nextPageBtn.disabled = true;
        } else {
            nextPageBtn.disabled = false;
            nextPageBtn.addEventListener('click', function () {
                currentPage++;
                renderPagination();
                renderTable();
            });
        }
    }

    renderPagination();
    renderTable();
</script>
<script>
    const scrollBtn = document.getElementById('scrollBtn');

    function toggleScroll() {
        const currentPosition = window.scrollY;
        const windowHeight = window.innerHeight;
        const documentHeight = document.documentElement.scrollHeight;
        const isBottom = currentPosition + windowHeight >= documentHeight - 1;
        window.scrollTo({
            top: isBottom ? 0 : documentHeight,
            behavior: 'smooth'
        });
        scrollBtn.textContent = isBottom ? '↓' : '↑';
    }

    scrollBtn.addEventListener('click', toggleScroll);
    window.addEventListener('scroll', () => {
        const currentPosition = window.scrollY;
        const windowHeight = window.innerHeight;
        const documentHeight = document.documentElement.scrollHeight;
        scrollBtn.textContent = currentPosition + windowHeight >= documentHeight - 1 ? '↑' : '↓';
    });

</script>
</body>
</html>
